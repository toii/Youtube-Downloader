# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Frame_Principal.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import urllib.request
import json
import urllib
from mhyt import yt_download
import requests,re
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(514, 460)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(50, 180, 41, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.txt_link1 = QtWidgets.QLineEdit(self.centralwidget)
        self.txt_link1.setGeometry(QtCore.QRect(110, 180, 350, 31))
        self.txt_link1.setObjectName("txt_link1")
        self.bt_download = QtWidgets.QPushButton(self.centralwidget)
        self.bt_download.setEnabled(True)
        self.bt_download.setGeometry(QtCore.QRect(320, 250, 141, 111))
        self.bt_download.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/Youtube/Download Buttom.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_download.setIcon(icon)
        self.bt_download.setIconSize(QtCore.QSize(180, 110))
        self.bt_download.setAutoRepeat(False)
        self.bt_download.setAutoExclusive(False)
        self.bt_download.setAutoRepeatInterval(100)
        self.bt_download.setObjectName("bt_download")
        #self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        #self.progressBar.setGeometry(QtCore.QRect(20, 390, 481, 21))
        #self.progressBar.setProperty("value", 24)
        #self.progressBar.setObjectName("progressBar")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setEnabled(False)
        self.textBrowser.setGeometry(QtCore.QRect(0, 0, 511, 161))
        self.textBrowser.setObjectName("textBrowser")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 230, 181, 131))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.verticalLayout.setContentsMargins(5, 5, 4, 5)
        self.verticalLayout.setSpacing(5)
        self.verticalLayout.setObjectName("verticalLayout")
        self.rb_mp3 = QtWidgets.QRadioButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.rb_mp3.setFont(font)
        self.rb_mp3.setObjectName("rb_mp3")
        self.verticalLayout.addWidget(self.rb_mp3)
        self.rb_mp4 = QtWidgets.QRadioButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.rb_mp4.setFont(font)
        self.rb_mp4.setChecked(True)
        self.rb_mp4.setObjectName("rb_mp4")
        self.verticalLayout.addWidget(self.rb_mp4)
        self.label.raise_()
        self.txt_link1.raise_()
        self.bt_download.raise_()
        #self.progressBar.raise_()
        self.layoutWidget.raise_()
        self.textBrowser.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        #self.statusbar = QtWidgets.QStatusBar(MainWindow)
        #self.statusbar.setObjectName("statusbar")
        #MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


        ### Botão Download
        self.bt_download.clicked.connect(self.Download)
        

    def Download(self):
        if self.rb_mp4.isChecked() == True:
            url = self.txt_link1.text()
            urltext = url
           
            #Pegando o nome do video
            response = requests.get(urltext).text
            title = re.findall(r'"title":"[^>]*",',response)[0].split(',')[0][9:-1]         
            titulo_mp4 = title + '.mp4'
           
            #Limitando o tamanho do nome do arquivo para 50 caracteres
            titulo_mp4a = titulo_mp4[:50]
            yt_download(url,titulo_mp4a)

        elif self.rb_mp3.isChecked()== True:
            try:
                url = self.txt_link1.text()
                urltext = url
                
                #Pegando o nome do video
                response = requests.get(urltext).text
                title = re.findall(r'"title":"[^>]*",',response)[0].split(',')[0][9:-1]         
                titulo_mp3 = title + '.mp3'
           
                #Limitando o tamanho do nome do arquivo para 50 caracteres
                titulo_mp3a = titulo_mp3[:50]
                yt_download(url,titulo_mp3a, ismusic= True, codec= 'mp3')
            except:
                pass


       


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Youtube Downloader Tiago Gomes"))
        self.label.setText(_translate("MainWindow", "Link"))
        self.bt_download.setToolTip(_translate("MainWindow", "<html><head/><body><p><img src=\":/Youtube_Banner/Youtube Banner.jpg\"/></p></body></html>"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/Youtube/Youtuber Banner 6.png\" /></p></body></html>"))
        self.rb_mp3.setText(_translate("MainWindow", "Áudio (MP3)"))
        self.rb_mp4.setText(_translate("MainWindow", "Vídeo (MP4)"))
import Novo


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
